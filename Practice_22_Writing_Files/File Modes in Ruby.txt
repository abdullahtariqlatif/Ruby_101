Opening a File using Different Modes in Ruby

Ruby lets you open a file with different permissions (modes). You can open a file in a read only mode, write only mode, or a read-write mode, for example. The syntax to open a file in a mode is as follows:

file = File.open (“yourfilename.txt”, “mode”)

If you don’t specify any mode, it will default to a read-only mode. Lets take a look at the different modes available, with examples.

    Read Only

Read only permission is denoted by ‘r’.  The read only mode is the default mode. The file pointer points to the beginning of the file, by default. If you open a file as read only, you cannot edit it or change it in any way.

file = File.open ('myfile.txt', 'r')

    Write Only

Write only permission is denoted by ‘w’. This mode should be used when you only want to add data or rather write into a file. If you set a file to write only, you will not be able to read back from it. The file pointer starts at the beginning of the file. The file, if it exists, is overwritten. Otherwise, a new file is created.
Ruby students also learn

file = File.open ('myfile.txt', 'w')

    Append only

Append/Write only permission  is denoted by ‘a’. The main difference from the previous option is that the file pointer starts at the end of the file. This means the existing data in the file is not overwritten. We can only add on to it. If the file doesn’t exist, a new file is created.

file = File.open ('myfile.txt', 'a')

    Read- write permission ‘r+’

Read- write permission is denoted by ‘r+’. You can both read and modify a file with this. The file pointer starts at the beginning of the file by default, enabling you to start reading from the very beginning.

file = File.open ('myfile.txt', 'r+')

    Read-write permission ‘w+’

Like the previous mode, this one also opens a file with both read and write permissions. However, this command removes all existing data in the file, and effectively overwrites an existing file. If a file with the specified name does not exist, you a new file is created.

file = File.open ('myfile.txt', 'w+')

     Read and write permission ‘a+’

This is similar to the ‘w+’ mode, with the difference that the pointer is positioned at the end of the file. This means we append to the file and do not overwrite it. If the file exists, it can be appended. If it doesn’t exist, a new file is created.

file = File.open ('myfile.txt', 'a+')

    Binary File mode ‘b’

This mode is used along with the permissions given above. It can only be run in DOS/Windows